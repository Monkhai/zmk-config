#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        cmd_ctrl_shift: cmd_ctrl_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp LEFT_SHIFT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_COMMAND &kp LEFT_SHIFT>;

            label = "CMD_CTRL_SHIFT";
        };

        ctrl_shift: ctrl_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT>;

            label = "CTRL_SHIFT";
        };

        ctrl_space: ctrl_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_CONTROL &kp SPACE>;

            label = "CTRL_SPACE";
        };
    };

    behaviors {
        paren_open_shift: paren_open_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "PAREN_OPEN_SHIFT";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LEFT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        paren_open_ctrl: paren_open_ctrl {
            compatible = "zmk,behavior-mod-morph";
            label = "PAREN_OPEN_CTRL";
            bindings = <&paren_open_shift>, <&kp LEFT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        paren_close_shift: paren_close_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "PAREN_CLOSE_SHIFT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp RIGHT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        paren_close_ctrl: paren_close_ctrl {
            compatible = "zmk,behavior-mod-morph";
            label = "PAREN_CLOSE_CTRL";
            bindings = <&paren_close_shift>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_RSFT|MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &tog 1                                                                                     &mo 3    &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &kp F1                                                                                     &kp F12  &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &kp F2             &mo 4          &ctrl_shift         &cmd_ctrl_shift  &ctrl_space         &none    &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                                     &kp LEFT_GUI        &kp LEFT_GUI                                  &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                  &kp SPACE  &kp BACKSPACE  &kp LEFT_CONTROL    &kp LEFT_ALT     &kp ENTER    &mo 3                   &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                                    &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                                     &none  &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none             &kp LCTRL  &kp LALT    &kp LGUI   &mo 4                 &none  &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                                &kp HOME    &kp PG_UP                               &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                  &kp BSPC  &kp DEL    &kp END     &kp PG_DN  &kp ENTER  &kp KP_N0                 &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                                    &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                                     &none  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none           &trans  &trans    &trans  &trans          &none  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                          &trans    &trans                         &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans    &trans  &trans  &trans                 &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans                                                                        &trans       &trans  &trans                &trans                 &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &bootloader                                                                   &bootloader  &trans  &kp LESS_THAN         &kp GREATER_THAN       &trans  &trans  &trans
&trans  &trans        &trans        &kp MINUS     &kp EQUAL     &trans        &trans              &trans  &trans    &bt BT_CLR  &trans                        &trans       &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans  &trans
&trans  &trans        &trans        &kp UNDER     &kp PLUS      &trans                                    &trans    &trans                                                 &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans                                   &trans  &trans  &trans    &trans      &bl BL_TOG  &rgb_ug RGB_TOG                       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans  &trans  &trans
            >;
        };

        symbols {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans       &trans                                                    &trans  &trans        &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &trans                                                    &trans  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&trans  &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT  &trans          &trans  &trans    &trans  &trans          &trans  &kp CARET     &kp AMPS      &kp STAR      &trans        &trans        &trans
&trans  &trans        &trans        &trans        &trans        &trans                               &trans    &trans                          &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans        &trans        &trans        &trans                             &trans  &trans  &trans    &trans  &trans  &trans                        &trans        &trans        &trans        &trans        &trans
            >;
        };
    };
};
